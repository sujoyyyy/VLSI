$date
	Wed Aug 26 00:01:04 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module SR_PIPO_tb $end
$var wire 8 ! q [8:1] $end
$var reg 1 " clk $end
$var reg 8 # inp [8:1] $end
$var reg 1 $ reset $end
$var reg 1 % write $end
$scope module srPIPO $end
$var wire 1 " clk $end
$var wire 8 & d [8:1] $end
$var wire 1 $ reset $end
$var wire 1 % write_check $end
$var wire 4 ' w [4:1] $end
$var wire 8 ( outputs [8:1] $end
$scope module dff_1 $end
$var wire 1 " clk $end
$var wire 4 ) d [4:1] $end
$var wire 1 $ reset $end
$var wire 1 % write_check $end
$var wire 4 * outputs [4:1] $end
$scope module dff_1 $end
$var wire 1 " clk $end
$var wire 1 + d $end
$var wire 1 $ reset $end
$var reg 1 , q $end
$upscope $end
$scope module dff_2 $end
$var wire 1 " clk $end
$var wire 1 - d $end
$var wire 1 $ reset $end
$var reg 1 . q $end
$upscope $end
$scope module dff_3 $end
$var wire 1 " clk $end
$var wire 1 / d $end
$var wire 1 $ reset $end
$var reg 1 0 q $end
$upscope $end
$scope module dff_4 $end
$var wire 1 " clk $end
$var wire 1 1 d $end
$var wire 1 $ reset $end
$var reg 1 2 q $end
$upscope $end
$upscope $end
$scope module dff_2 $end
$var wire 1 " clk $end
$var wire 4 3 d [4:1] $end
$var wire 1 $ reset $end
$var wire 1 % write_check $end
$var wire 4 4 outputs [4:1] $end
$scope module dff_1 $end
$var wire 1 " clk $end
$var wire 1 5 d $end
$var wire 1 $ reset $end
$var reg 1 6 q $end
$upscope $end
$scope module dff_2 $end
$var wire 1 " clk $end
$var wire 1 7 d $end
$var wire 1 $ reset $end
$var reg 1 8 q $end
$upscope $end
$scope module dff_3 $end
$var wire 1 " clk $end
$var wire 1 9 d $end
$var wire 1 $ reset $end
$var reg 1 : q $end
$upscope $end
$scope module dff_4 $end
$var wire 1 " clk $end
$var wire 1 ; d $end
$var wire 1 $ reset $end
$var reg 1 < q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x<
0;
x:
09
x8
07
x6
05
bx 4
b0 3
x2
01
x0
0/
x.
0-
x,
0+
bx *
b0 )
bx (
b0 '
b0 &
1%
0$
b0 #
0"
bx !
$end
#5
19
1/
b10 '
b10 3
b10 )
1"
b100010 #
b100010 &
#10
0<
1:
08
b100 4
06
02
10
0.
b1000100 !
b1000100 (
b100 *
0,
17
09
15
11
b1 '
b1 3
b1110 )
0"
b11110 #
b11110 &
#15
07
19
05
1-
0/
01
b1010 '
b1010 3
1+
b1 )
1"
b10100001 #
b10100001 &
#20
1,
1.
b1000011 !
b1000011 (
b11 *
00
09
0-
1/
b0 '
b0 3
0+
b1010 )
0"
b1010 #
b1010 &
#25
19
1;
1-
11
b110 '
b110 3
1+
b1111 )
1"
b1101111 #
b1101111 &
#30
b1100 4
1<
12
b11001111 !
b11001111 (
b1111 *
10
17
09
0;
15
0-
0/
01
b1 '
b1 3
0+
b0 )
0"
b10000 #
b10000 &
#35
07
19
05
1/
11
b10 '
b10 3
b1110 )
1"
b101110 #
b101110 &
#40
0,
b1100 *
0.
b1001100 !
b1001100 (
b100 4
0<
09
1-
01
b0 '
b0 3
1+
b11 )
0"
b11 #
b11 &
#45
19
0-
0/
11
b10 '
b10 3
0+
b100 )
1"
b100100 #
b100100 &
#50
b1001000 !
b1001000 (
b1000 *
00
17
09
15
01
b1 '
b1 3
b1000 )
0"
b11000 #
b11000 &
#55
1"
#60
b0 *
02
16
18
b110000 !
b110000 (
b11 4
0:
0"
