$date
	Mon Sep  7 19:39:36 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 32 ! Sum [31:0] $end
$var wire 1 " Carry $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % iniC $end
$scope module cr $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 1 % iniC $end
$var wire 32 ( Sum [31:0] $end
$var wire 1 " Carry $end
$var reg 32 ) Cin [31:0] $end
$var reg 2 * access [1:0] $end
$var reg 6 + i [5:0] $end
$var reg 2 , inaccess1 [1:0] $end
$var reg 2 - inaccess2 [1:0] $end
$var reg 6 . j [5:0] $end
$var reg 6 / k [5:0] $end
$var reg 6 0 m [5:0] $end
$var reg 6 1 n [5:0] $end
$var reg 6 2 o [5:0] $end
$scope module f1 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 % Cin $end
$var wire 1 5 Sum $end
$upscope $end
$scope module f10 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 8 Cin $end
$var wire 1 9 Sum $end
$upscope $end
$scope module f11 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < Cin $end
$var wire 1 = Sum $end
$upscope $end
$scope module f12 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 @ Cin $end
$var wire 1 A Sum $end
$upscope $end
$scope module f13 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 D Cin $end
$var wire 1 E Sum $end
$upscope $end
$scope module f14 $end
$var wire 1 F A $end
$var wire 1 G B $end
$var wire 1 H Cin $end
$var wire 1 I Sum $end
$upscope $end
$scope module f15 $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 L Cin $end
$var wire 1 M Sum $end
$upscope $end
$scope module f16 $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 P Cin $end
$var wire 1 Q Sum $end
$upscope $end
$scope module f17 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 T Cin $end
$var wire 1 U Sum $end
$upscope $end
$scope module f18 $end
$var wire 1 V A $end
$var wire 1 W B $end
$var wire 1 X Cin $end
$var wire 1 Y Sum $end
$upscope $end
$scope module f19 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 \ Cin $end
$var wire 1 ] Sum $end
$upscope $end
$scope module f2 $end
$var wire 1 ^ A $end
$var wire 1 _ B $end
$var wire 1 ` Cin $end
$var wire 1 a Sum $end
$upscope $end
$scope module f20 $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 d Cin $end
$var wire 1 e Sum $end
$upscope $end
$scope module f21 $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 h Cin $end
$var wire 1 i Sum $end
$upscope $end
$scope module f22 $end
$var wire 1 j A $end
$var wire 1 k B $end
$var wire 1 l Cin $end
$var wire 1 m Sum $end
$upscope $end
$scope module f23 $end
$var wire 1 n A $end
$var wire 1 o B $end
$var wire 1 p Cin $end
$var wire 1 q Sum $end
$upscope $end
$scope module f24 $end
$var wire 1 r A $end
$var wire 1 s B $end
$var wire 1 t Cin $end
$var wire 1 u Sum $end
$upscope $end
$scope module f25 $end
$var wire 1 v A $end
$var wire 1 w B $end
$var wire 1 x Cin $end
$var wire 1 y Sum $end
$upscope $end
$scope module f26 $end
$var wire 1 z A $end
$var wire 1 { B $end
$var wire 1 | Cin $end
$var wire 1 } Sum $end
$upscope $end
$scope module f27 $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" Cin $end
$var wire 1 #" Sum $end
$upscope $end
$scope module f28 $end
$var wire 1 $" A $end
$var wire 1 %" B $end
$var wire 1 &" Cin $end
$var wire 1 '" Sum $end
$upscope $end
$scope module f29 $end
$var wire 1 (" A $end
$var wire 1 )" B $end
$var wire 1 *" Cin $end
$var wire 1 +" Sum $end
$upscope $end
$scope module f3 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." Cin $end
$var wire 1 /" Sum $end
$upscope $end
$scope module f30 $end
$var wire 1 0" A $end
$var wire 1 1" B $end
$var wire 1 2" Cin $end
$var wire 1 3" Sum $end
$upscope $end
$scope module f31 $end
$var wire 1 4" A $end
$var wire 1 5" B $end
$var wire 1 6" Cin $end
$var wire 1 7" Sum $end
$upscope $end
$scope module f32 $end
$var wire 1 8" A $end
$var wire 1 9" B $end
$var wire 1 :" Cin $end
$var wire 1 ;" Sum $end
$upscope $end
$scope module f4 $end
$var wire 1 <" A $end
$var wire 1 =" B $end
$var wire 1 >" Cin $end
$var wire 1 ?" Sum $end
$upscope $end
$scope module f5 $end
$var wire 1 @" A $end
$var wire 1 A" B $end
$var wire 1 B" Cin $end
$var wire 1 C" Sum $end
$upscope $end
$scope module f6 $end
$var wire 1 D" A $end
$var wire 1 E" B $end
$var wire 1 F" Cin $end
$var wire 1 G" Sum $end
$upscope $end
$scope module f7 $end
$var wire 1 H" A $end
$var wire 1 I" B $end
$var wire 1 J" Cin $end
$var wire 1 K" Sum $end
$upscope $end
$scope module f8 $end
$var wire 1 L" A $end
$var wire 1 M" B $end
$var wire 1 N" Cin $end
$var wire 1 O" Sum $end
$upscope $end
$scope module f9 $end
$var wire 1 P" A $end
$var wire 1 Q" B $end
$var wire 1 R" Cin $end
$var wire 1 S" Sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1S"
0R"
0Q"
1P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
1G"
0F"
1E"
0D"
1C"
0B"
0A"
1@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
1M
0L
1K
0J
1I
0H
0G
1F
1E
1D
0C
0B
0A
1@
1?
0>
1=
1<
1;
1:
09
08
17
16
15
04
03
b100000 2
b100000 1
b100000 0
b100000 /
b100000 .
b0 -
b0 ,
b100000 +
b0 *
b111000000000 )
b111010100110001 (
b100111000100000 '
b10011100010000 &
1%
b100111000100000 $
b10011100010000 #
0"
b111010100110001 !
$end
#5
1/"
0G"
19
0M
0E
1A
1?"
0C"
1K"
1O"
b1010111111001101 !
b1010111111001101 (
1Q
0D
0@
0<
1-"
0E"
07
0;
0?
0K
b0 )
b100000 0
b100000 /
b0 ,
b0 -
b100000 .
b100000 +
b100000 1
b0 *
b100000 2
1<"
0@"
1H"
1L"
1>
1N
b100 $
b100 '
b1010111111001000 #
b1010111111001000 &
#10
1G"
0/"
0=
0A
0I
b1111101001 !
b1111101001 (
0Q
1>"
1."
1`
14
1_
1E"
1I"
1M"
1Q"
17
b111 )
b100000 0
b100000 /
b0 -
b0 ,
b100000 .
b100000 +
b100000 1
b100000 2
b0 *
13
0<"
0H"
0L"
0P"
06
0:
0>
0F
0N
b1111100111 $
b1111100111 '
b1 #
b1 &
